%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.9.5 (Build 13F34) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 193 193
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 193 193
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 1 1 sc
q
-84.5 363.5 m
283.5 363.5 l
283.5 -259.5 l
-84.5 -259.5 l
h
-64 342.5 m
263 342.5 l
262.5 343 l
262.5 -239 l
263 -238.5 l
-64 -238.5 l
-63.5 -239 l
-63.5 343 l
-64 342.5 l
h
-64 343.5 m
-64.5 343.5 l
-64.5 343 l
-64.5 -239 l
-64.5 -239.5 l
-64 -239.5 l
263 -239.5 l
263.5 -239.5 l
263.5 -239 l
263.5 343 l
263.5 343.5 l
263 343.5 l
-64 343.5 l
h
-64 343.5 m
W*
-64 343 m
263 343 l
263 -239 l
-64 -239 l
-64 343 l
h
-64 343 m
W*
0 0 193 193 rc
-64 343 m
263 343 l
263 -239 l
-64 -239 l
-64 343 l
h
-64 343 m
f*
Q
2 w
0.59200001 0.59200001 0.59200001 sc
q
-64 343 m
263 343 l
263 -239 l
-64 -239 l
-64 343 l
h
-64 343 m
W*
0 0 193 193 rc
1 0 0 -1 -64 343 cm
0 0 m
327 0 l
327 582 l
0 582 l
0 0 l
h
0 0 m
S
Q
1 0.56182063 0 sc
q
77.783783 69.666664 m
77.783783 76.580246 l
67.918922 76.580246 l
67.918922 68.679016 l
68.905403 68.679016 l
68.905403 64.728394 l
82.716217 64.728394 l
82.716217 45.962963 l
87.648651 45.962963 l
87.648651 66.703705 l
87.648651 69.666664 l
77.783783 69.666664 l
h
74.824326 92.382713 m
77.783783 92.382713 l
77.783783 98.30864 l
62.986488 98.30864 l
62.986488 93.370369 l
62.986488 89.419754 l
71.864868 89.419754 l
71.864868 86.456787 l
77.783783 86.456787 l
77.783783 92.382713 l
74.824326 92.382713 l
74.824326 92.382713 l
74.824326 92.382713 l
h
130.06757 117.07407 m
130.06757 122.01234 l
125.13513 122.01234 l
125.13513 102.25926 l
130.06757 102.25926 l
130.06757 110.16049 l
135 110.16049 l
135 117.07407 l
130.06757 117.07407 l
130.06757 117.07407 l
h
82.716217 107.19753 m
62 107.19753 l
62 102.25926 l
87.648651 102.25926 l
87.648651 105.71605 l
87.648651 122.01234 l
82.716217 122.01234 l
82.716217 107.19753 l
82.716217 107.19753 l
h
87.648651 65.716049 m
93.567566 65.716049 l
93.567566 59.790123 l
87.648651 59.790123 l
87.648651 65.716049 l
h
93.567566 59.790123 m
99.486488 59.790123 l
99.486488 46.950619 l
93.567566 46.950619 l
93.567566 59.790123 l
h
99.486488 67.69136 m
125.13513 67.69136 l
125.13513 62.753086 l
99.486488 62.753086 l
99.486488 67.69136 l
h
99.486488 62.753086 m
106.39189 62.753086 l
106.39189 52.876545 l
99.486488 52.876545 l
99.486488 62.753086 l
h
111.32433 52.876545 m
119.21622 52.876545 l
119.21622 43 l
111.32433 43 l
111.32433 52.876545 l
h
111.32433 62.753086 m
126.12162 62.753086 l
126.12162 57.814816 l
111.32433 57.814816 l
111.32433 62.753086 l
h
87.648651 117.07407 m
93.567566 117.07407 l
93.567566 104.23457 l
87.648651 104.23457 l
87.648651 117.07407 l
h
93.567566 123 m
99.486488 123 l
99.486488 117.07407 l
93.567566 117.07407 l
93.567566 123 l
h
66.932434 122.01234 m
77.783783 122.01234 l
77.783783 111.14815 l
66.932434 111.14815 l
66.932434 122.01234 l
h
108.36487 78.555557 m
119.21622 78.555557 l
119.21622 67.69136 l
108.36487 67.69136 l
108.36487 78.555557 l
h
109.35135 122.01234 m
120.20271 122.01234 l
120.20271 111.14815 l
109.35135 111.14815 l
109.35135 122.01234 l
h
104.41892 107.19753 m
125.13513 107.19753 l
125.13513 102.25926 l
104.41892 102.25926 l
104.41892 107.19753 l
h
87.648651 98.30864 m
93.567566 98.30864 l
93.567566 92.382713 l
87.648651 92.382713 l
87.648651 98.30864 l
h
93.567566 92.382713 m
99.486488 92.382713 l
99.486488 86.456787 l
93.567566 86.456787 l
93.567566 92.382713 l
h
93.567566 104.23457 m
99.486488 104.23457 l
99.486488 98.30864 l
93.567566 98.30864 l
93.567566 104.23457 l
h
77.783783 102.25926 m
87.648651 102.25926 l
87.648651 98.30864 l
77.783783 98.30864 l
77.783783 102.25926 l
h
77.783783 86.456787 m
93.567566 86.456787 l
93.567566 76.580246 l
77.783783 76.580246 l
77.783783 86.456787 l
h
93.567566 76.580246 m
99.486488 76.580246 l
99.486488 70.65432 l
93.567566 70.65432 l
93.567566 76.580246 l
h
122.17567 88.432098 m
129.08109 88.432098 l
129.08109 77.567902 l
122.17567 77.567902 l
122.17567 88.432098 l
h
99.486488 86.456787 m
106.39189 86.456787 l
106.39189 67.69136 l
99.486488 67.69136 l
99.486488 86.456787 l
h
99.486488 98.30864 m
117.24324 98.30864 l
117.24324 91.395065 l
99.486488 91.395065 l
99.486488 98.30864 l
h
117.24324 96.333336 m
124.14865 96.333336 l
124.14865 89.419754 l
117.24324 89.419754 l
117.24324 96.333336 l
h
122.17567 102.25926 m
130.06757 102.25926 l
130.06757 96.333336 l
122.17567 96.333336 l
122.17567 102.25926 l
h
109.35135 91.395065 m
117.24324 91.395065 l
117.24324 83.493828 l
109.35135 83.493828 l
109.35135 91.395065 l
h
99.486488 122.01234 m
104.41892 122.01234 l
104.41892 102.25926 l
99.486488 102.25926 l
99.486488 122.01234 l
h
66.932434 60.777779 m
77.783783 60.777779 l
77.783783 49.913582 l
66.932434 49.913582 l
66.932434 60.777779 l
h
66.932434 60.777779 m
W*
0 0 193 193 rc
57 128 m
140 128 l
140 38 l
57 38 l
h
f
Q
q
56.933655 117.18368 m
57.042576 116.52809 l
129.14304 116.52809 l
129.25201 117.18387 l
126.41771 120.52809 l
125.75294 120.52809 l
114.35972 51.9739 l
114.13218 50.604023 112.98643 49.629215 111.6178 49.629215 c
74.568001 49.629215 l
73.196182 49.629215 72.050255 50.603821 71.822739 51.973553 c
60.432831 120.52809 l
59.768257 120.52809 l
56.933655 117.18368 l
h
129.69661 78.38736 m
129.28946 75.937386 l
130.98643 74.495087 l
131.85254 74.973129 132.65874 75.548584 133.38943 76.208824 c
140.64549 119.87236 l
136.6996 116.52809 l
142.90292 116.52809 l
143.01187 117.18378 l
140.17743 120.52809 l
139.51276 120.52809 l
133.4915 84.292679 l
133.08127 81.822723 131.68573 79.716721 129.69661 78.387367 c
h
148.09152 81.864845 m
154.87793 122.71877 l
155.23326 124.86839 154.63013 127.06039 153.22151 128.72192 c
151.8264 130.37762 149.75494 131.33708 147.57961 131.33708 c
52.3694 131.33708 l
50.191639 131.33708 48.119846 130.37837 46.716354 128.71278 c
45.312981 127.05744 44.706348 124.85995 45.069359 122.70869 c
57.222675 49.549351 l
58.637306 41.023949 65.938904 34.820225 74.568001 34.820225 c
111.6178 34.820225 l
120.24471 34.820225 127.54956 41.025414 128.96011 49.548328 c
131.63885 65.662384 l
128.28389 62.362209 l
138.40135 63.873348 146.39944 71.67865 148.09152 81.864838 c
148.09152 81.864845 l
h
106.7796 147.16853 m
110.86672 147.16853 114.1796 150.48579 114.1796 154.57303 c
114.1796 171.5955 l
114.1796 175.68274 110.86672 179 106.7796 179 c
102.68963 179 99.379601 175.6833 99.379601 171.5955 c
99.379601 154.57303 l
99.379601 150.48523 102.68963 147.16853 106.7796 147.16853 c
h
93.179604 136.95506 m
97.266724 136.95506 100.5796 140.27231 100.5796 144.35956 c
100.5796 171.5955 l
100.5796 175.68274 97.266724 179 93.179604 179 c
89.08963 179 85.779602 175.6833 85.779602 171.5955 c
85.779602 144.35956 l
85.779602 140.27176 89.08963 136.95506 93.179604 136.95506 c
h
79.579597 136.95506 m
83.666725 136.95506 86.979599 140.27231 86.979599 144.35956 c
86.979599 161.38202 l
86.979599 165.46925 83.666725 168.78651 79.579597 168.78651 c
75.489632 168.78651 72.179604 165.46982 72.179604 161.38202 c
72.179604 144.35956 l
72.179604 140.27176 75.489632 136.95506 79.579597 136.95506 c
h
56.264778 41.756371 m
52.762623 43.873814 48.201096 42.741116 46.097954 39.226303 c
43.998329 35.729691 45.123962 31.186914 48.616821 29.07509 c
60.722572 21.787998 76.71505 17.889673 93.288399 17.889673 c
109.8623 17.889673 125.85467 21.788198 137.95033 29.071325 c
141.45132 31.183586 142.57961 35.72781 140.47566 39.231621 c
138.37189 42.740074 133.80853 43.877823 130.30672 41.753155 c
110.03153 29.543171 76.545265 29.543171 56.258759 41.760002 c
56.264778 41.756371 l
h
56.264778 41.756371 m
W*
0 0 193 193 rc
43.966362 180 m
155.97797 180 l
155.97797 16.889673 l
43.966362 16.889673 l
h
f
Q
8 w
1 1 1 sc
q
34.966362 189 m
164.97797 189 l
164.97797 7.8896742 l
34.966362 7.8896742 l
h
144.1456 82.520317 m
142.7244 73.964821 136.0128 67.560966 127.693 66.318329 c
125.0138 50.20145 l
123.9224 43.606945 118.2852 38.820225 111.6178 38.820225 c
74.568001 38.820225 l
67.897202 38.820225 62.263401 43.606945 61.168598 50.204853 c
49.013599 123.37424 l
48.847 124.36155 49.125801 125.36928 49.7752 126.13529 c
50.417801 126.8979 51.369801 127.33708 52.3694 127.33708 c
147.57961 127.33708 l
148.57581 127.33708 149.5278 126.8979 150.17039 126.13529 c
150.81979 125.36928 151.0952 124.36155 150.93201 123.37424 c
144.1456 82.520317 l
h
56.377998 120.52809 m
67.876801 51.318123 l
68.424202 48.022572 71.236 45.629215 74.568001 45.629215 c
111.6178 45.629215 l
114.9464 45.629215 117.7582 48.022572 118.3056 51.318123 c
129.8078 120.52809 l
56.377998 120.52809 l
h
136.6996 120.52809 m
128.89661 73.573303 l
133.27921 75.057663 136.6384 78.826439 137.43739 83.636986 c
143.5676 120.52809 l
136.6996 120.52809 l
136.6996 120.52809 l
h
106.7796 151.16853 m
104.8994 151.16853 103.3796 152.69376 103.3796 154.57303 c
103.3796 171.5955 l
103.3796 173.47479 104.8994 175 106.7796 175 c
108.6564 175 110.1796 173.47479 110.1796 171.5955 c
110.1796 154.57303 l
110.1796 152.69376 108.6564 151.16853 106.7796 151.16853 c
106.7796 151.16853 l
h
93.179604 140.95506 m
91.2994 140.95506 89.779602 142.48027 89.779602 144.35956 c
89.779602 171.5955 l
89.779602 173.47479 91.2994 175 93.179604 175 c
95.056396 175 96.579597 173.47479 96.579597 171.5955 c
96.579597 144.35956 l
96.579597 142.48027 95.056396 140.95506 93.179604 140.95506 c
93.179604 140.95506 l
h
79.579597 140.95506 m
77.699402 140.95506 76.179604 142.48027 76.179604 144.35956 c
76.179604 161.38202 l
76.179604 163.26131 77.699402 164.78651 79.579597 164.78651 c
81.456398 164.78651 82.979599 163.26131 82.979599 161.38202 c
82.979599 144.35956 l
82.979599 142.48027 81.456398 140.95506 79.579597 140.95506 c
79.579597 140.95506 l
h
54.195202 38.333382 m
75.751198 25.352045 110.8256 25.352045 132.38161 38.333382 c
133.9864 39.307068 136.0808 38.782776 137.0464 37.172451 c
138.0154 35.55872 137.49519 33.468361 135.88699 32.498077 c
124.1434 25.426945 108.7142 21.889673 93.288399 21.889673 c
77.862602 21.889673 62.433399 25.426945 50.686401 32.498077 c
49.0816 33.468361 48.561401 35.55872 49.530399 37.172451 c
50.495998 38.786179 52.590401 39.303661 54.195202 38.333382 c
54.195202 38.333382 l
h
54.195202 38.333382 m
W*
0 0 193 193 rc
1 0 0 -1 48.966362 175 cm
95.179237 92.479683 m
93.758041 101.03518 87.04644 107.43903 78.726639 108.68167 c
76.04744 124.79855 l
74.956039 131.39305 69.31884 136.17978 62.65144 136.17978 c
25.601639 136.17978 l
18.930838 136.17978 13.297038 131.39305 12.202238 124.79514 c
0.047238238 51.625751 l
-0.11936177 50.638451 0.15943824 49.630718 0.80883825 48.864708 c
1.4514382 48.1021 2.4034383 47.662922 3.4030383 47.662922 c
98.613235 47.662922 l
99.609436 47.662922 100.56144 48.1021 101.20404 48.864708 c
101.85344 49.630718 102.12884 50.638451 101.96564 51.625751 c
95.179237 92.479683 l
h
7.4116383 54.471909 m
18.910439 123.68188 l
19.457838 126.97742 22.269638 129.37079 25.601639 129.37079 c
62.65144 129.37079 l
65.980042 129.37079 68.79184 126.97742 69.339241 123.68188 c
80.841438 54.471909 l
7.4116383 54.471909 l
h
87.733238 54.471909 m
79.930237 101.4267 l
84.312836 99.942337 87.672035 96.173561 88.471039 91.363014 c
94.601234 54.471909 l
87.733238 54.471909 l
87.733238 54.471909 l
h
57.81324 23.831461 m
55.933037 23.831461 54.413239 22.306248 54.413239 20.426966 c
54.413239 3.4044943 l
54.413239 1.5252135 55.933037 0 57.81324 0 c
59.690037 0 61.213238 1.5252135 61.213238 3.4044943 c
61.213238 20.426966 l
61.213238 22.306248 59.690037 23.831461 57.81324 23.831461 c
57.81324 23.831461 l
h
44.213238 34.044945 m
42.333038 34.044945 40.81324 32.51973 40.81324 30.64045 c
40.81324 3.4044943 l
40.81324 1.5252135 42.333038 0 44.213238 0 c
46.090038 0 47.613239 1.5252135 47.613239 3.4044943 c
47.613239 30.64045 l
47.613239 32.51973 46.090038 34.044945 44.213238 34.044945 c
44.213238 34.044945 l
h
30.613237 34.044945 m
28.733038 34.044945 27.213238 32.51973 27.213238 30.64045 c
27.213238 13.617977 l
27.213238 11.738697 28.733038 10.213483 30.613237 10.213483 c
32.49004 10.213483 34.013237 11.738697 34.013237 13.617977 c
34.013237 30.64045 l
34.013237 32.51973 32.49004 34.044945 30.613237 34.044945 c
30.613237 34.044945 l
h
5.2288384 136.66661 m
26.784838 149.64795 61.859238 149.64795 83.415237 136.66661 c
85.020035 135.69293 87.114441 136.21722 88.08004 137.82755 c
89.049042 139.44128 88.528839 141.53165 86.920639 142.50192 c
75.17704 149.57306 59.747837 153.11032 44.322037 153.11032 c
28.896238 153.11032 13.467038 149.57306 1.7200383 142.50192 c
0.11523823 141.53165 -0.40496176 139.44128 0.56403822 137.82755 c
1.5296383 136.21382 3.6240382 135.69633 5.2288384 136.66661 c
5.2288384 136.66661 l
h
5.2288384 136.66661 m
S
ep
end
%%Trailer
%%EOF
